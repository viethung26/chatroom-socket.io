html
    head
        script(src="socket.io/socket.io.js")
        link(rel="stylesheet", href="index.css")
            
    body
        input(type="text", name="name", placeHolder="Name", onKeyUp="login(event)")
        .rooms
                input(type="text", name="roomname", placeHolder="Room's name")
                button(onClick="createRoom()") create
                table
                    thead
                        tr
                            th Name
                            th Owner
                            th Number
                    tbody.room-list
                         tr
                            td Hung
                            td viet hung
                            td 2
        .chatroom
            .online
                h3 User online
                ul.online-list
            .chats
                .messages
                p.typing-info
                input(name="msg", type="text", placeHolder="Chat here", autoFocus="true", onKeyUp="chat(event)", onFocus="typing(event)", onBlur="leave(event)")

        script.
            let $chatroom = document.querySelector('.chatroom') 
            let $rooms = document.querySelector('.rooms') 
            let $roomList = document.querySelector('.room-list') 
            let $online = document.querySelector('.online-list') 
            let $messages = document.querySelector('.messages') 
            let $name = document.querySelector("[name='name']")
            let $typingInfo = document.querySelector('.typing-info')
            $typingInfo.style.visibility = 'hidden'
            let socket = io('http://localhost:3000')
            function login(e) {
                if(e.keyCode === 13) {
                    socket.emit('new-name', e.target.value.trim())
                    e.target.value = ""
                }        
            }
            function createRoom() {
                let $roomname = document.querySelector("[name='roomname'")
                socket.emit('create-room', $roomname.value.trim())
            }
            function joinRoom(name) {
                socket.emit('join-room', name)
            }
            function typing(e) {
                socket.emit('is-typing')
            }
            function leave(e) {
                socket.emit('was-leaved')
            }
            function chat(e) {
                if(e.keyCode === 13) {
                    socket.emit('chat', e.target.value.trim())
                    e.target.value = ""
                }        
            }
            socket.on('refuse', ()=> {
                alert("This name was taken, choose another name")
            })
            socket.on('accept', ()=> {
                $rooms.style.display = 'block'
                //- $chatroom.style.display = 'grid'
                $name.style.display = 'none'
            })
            socket.on('room-existed', ()=> {
                alert("Room is existed")
            })
            socket.on('rooms', rooms=> {
                $roomList.innerHTML = ""
                rooms.forEach(room=> {
                    let $newRow = document.createElement('tr')
                    $newRow.innerHTML = `
                        <td>${room.name}</td>
                        <td>${room.owner}</td>
                        <td>${room.number}</td>
                        <td><button onclick="joinRoom('${room.name}')">Join</button></td>
                    `
                    $roomList.appendChild($newRow)
                })
            })
            socket.on('enter-room', ()=> {
                $rooms.style.display = 'none'
                $chatroom.style.display = 'grid'
            })
            socket.on('online-list', names=> {
                $online.innerHTML = ""
                names.forEach(name=> {
                    let $newEl = document.createElement('li')
                    $newEl.innerText = name
                    $online.appendChild($newEl)
                })
            })
            socket.on('person-is-typing', name=> {
                $typingInfo.innerText = name + " is typing ..."
                $typingInfo.style.visibility = "visible"
            })
            socket.on('person-was-leaved', name=> {
                $typingInfo.style.visibility = "hidden"
            })
            socket.on('new-msg', newmsg=> {
                let $newMsg = document.createElement('p')
                $newMsg.innerHTML = `<b>${newmsg.name}</b>: ${newmsg.msg}`
                $messages.appendChild($newMsg)
            })
